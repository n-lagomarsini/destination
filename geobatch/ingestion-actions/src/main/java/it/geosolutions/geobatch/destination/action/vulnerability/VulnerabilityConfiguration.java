/*
 *  GeoBatch - Open Source geospatial batch processing system
 *  http://geobatch.geo-solutions.it/
 *  Copyright (C) 2013 GeoSolutions S.A.S.
 *  http://www.geo-solutions.it
 *
 *  GPLv3 + Classpath exception
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package it.geosolutions.geobatch.destination.action.vulnerability;

import org.geotools.geometry.Envelope2D;

import it.geosolutions.geobatch.configuration.event.action.ActionConfiguration;

/**
 */
public class VulnerabilityConfiguration extends ActionConfiguration {

    private int aggregationLevel;

    private String writeMode;

    private String closePhase;

    private Integer threadMaxNumber;

    private Integer numXblocks;

    private Integer numYblocks;

    private Integer[] xStart;

    private Integer[] yStart;
    
    private Integer[] xStop;

    private Integer[] yStop;

    private String cellStart;

    private String idStart;

    private boolean skipArcs;
    
    private Envelope2D bbox;

    public VulnerabilityConfiguration(String id, String name, String description) {
        super(id, name, description);
    }

    public Integer getThreadMaxNumber() {
        return threadMaxNumber;
    }

    public void setThreadMaxNumber(Integer threadMaxNumber) {
        this.threadMaxNumber = threadMaxNumber;
    }

    public Integer getNumXblocks() {
        return numXblocks;
    }

    public void setNumXblocks(Integer numXblocks) {
        this.numXblocks = numXblocks;
    }

    public Integer getNumYblocks() {
        return numYblocks;
    }

    public void setNumYblocks(Integer numYblocks) {
        this.numYblocks = numYblocks;
    }

    public Integer[] getxStart() {
        return xStart;
    }

    public void setxStart(Integer[] xStart) {
        this.xStart = xStart;
    }

    public Integer[] getyStart() {
        return yStart;
    }

    public void setyStart(Integer[] yStart) {
        this.yStart = yStart;
    }

    public Integer[] getxStop() {
        return xStop;
    }

    public void setxStop(Integer[] xStop) {
        this.xStop = xStop;
    }

    public Integer[] getyStop() {
        return yStop;
    }

    public void setyStop(Integer[] yStop) {
        this.yStop = yStop;
    }
    
    public String getIdStart() {
        return idStart;
    }

    public void setIdStart(String idStart) {
        this.idStart = idStart;
    }

    public boolean isSkipArcs() {
        return skipArcs;
    }

    public void setSkipArcs(boolean skipArcs) {
        this.skipArcs = skipArcs;
    }

    public String getCellStart() {
        return cellStart;
    }

    public void setCellStart(String cellStart) {
        this.cellStart = cellStart;
    }

    public int getAggregationLevel() {
        return aggregationLevel;
    }

    public void setAggregationLevel(int aggregationLevel) {
        this.aggregationLevel = aggregationLevel;
    }

    public String getWriteMode() {
        return writeMode;
    }

    public void setWriteMode(String writeMode) {
        this.writeMode = writeMode;
    }

    public String getClosePhase() {
        return closePhase;
    }

    public void setClosePhase(String closePhase) {
        this.closePhase = closePhase;
    }

    
	public Envelope2D getBbox() {
		return bbox;
	}

	public void setBbox(Envelope2D bbox) {
		this.bbox = bbox;
	}
	
    @Override
    public VulnerabilityConfiguration clone() {
        final VulnerabilityConfiguration configuration = (VulnerabilityConfiguration) super.clone();

        return configuration;
    }



}
